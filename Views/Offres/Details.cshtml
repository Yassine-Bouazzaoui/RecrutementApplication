@model RecrutementApplication.Models.Offre

@{
    ViewData["Title"] = $"Offre: {Model.Poste} - {Model.Entreprise}";
}

<link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">

<style>
    :root {
        --bg-primary: #121212;
        --bg-secondary: #1e1e1e; 
        --text-primary: #f5f5f5; 
        --text-secondary: #b0b0b0;
        --accent-color: #4a90e2; 
        --accent-light: #77baff;
        --border-color: rgba(255, 255, 255, 0.15); 
        --success-color: #3ddc84; 
        --warning-color: #ffcc00; 
    }


    body {
        background: linear-gradient(135deg, var(--bg-primary) 0%, var(--bg-secondary) 100%);
        color: var(--text-primary);
        font-family: 'Poppins', sans-serif;
        min-height: 100vh;
    }

    .page-wrapper {
        max-width: 1400px;
        margin: 2rem auto;
        padding: 0 1rem;
    }

    .job-container {
        background: rgba(26, 31, 60, 0.7);
        border-radius: 25px;
        overflow: hidden;
        box-shadow: 0 30px 60px rgba(0, 0, 0, 0.3);
        display: grid;
        grid-template-columns: 3fr 1fr;
        backdrop-filter: blur(15px);
        border: 1px solid var(--border-color);
        position: relative;
    }

        .job-container::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 5px;
            background: linear-gradient(90deg, var(--accent-color), var(--accent-light));
        }

    .job-main-content {
        padding: 3rem;
        background: rgba(16, 16, 32, 0.5);
    }

    .job-header {
        display: flex;
        align-items: center;
        margin-bottom: 2.5rem;
        position: relative;
    }

    .job-logo-wrapper {
        position: relative;
        margin-right: 2rem;
    }

    .job-logo {
        width: 130px;
        height: 130px;
        border-radius: 20px;
        object-fit: cover;
        box-shadow: 0 15px 30px rgba(0, 0, 0, 0.3);
        border: 3px solid var(--accent-color);
        transition: transform 0.3s ease;
    }

    .job-logo-wrapper::after {
        content: '';
        position: absolute;
        inset: -5px;
        border-radius: 25px;
        background: linear-gradient(45deg, var(--accent-color), var(--accent-light));
        z-index: -1;
        opacity: 0.5;
    }

    .job-title {
        font-size: 2.8rem;
        font-weight: 700;
        margin-bottom: 0.7rem;
        background: linear-gradient(45deg, var(--accent-color), var(--accent-light));
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        letter-spacing: -0.5px;
    }

    .job-company {
        color: var(--text-secondary);
        font-size: 1.3rem;
        font-weight: 500;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .company-verified-badge {
        background: var(--success-color);
        color: white;
        padding: 0.2rem 0.6rem;
        border-radius: 12px;
        font-size: 0.8rem;
        display: inline-flex;
        align-items: center;
        gap: 0.3rem;
    }

    .job-meta {
        display: flex;
        gap: 1rem;
        margin-top: 1.5rem;
        flex-wrap: wrap;
    }

    .job-meta-item {
        background: rgba(106, 90, 205, 0.1);
        border: 1px solid var(--accent-color);
        padding: 0.7rem 1.2rem;
        border-radius: 25px;
        display: flex;
        align-items: center;
        gap: 0.7rem;
        color: var(--accent-light);
        transition: all 0.3s ease;
        font-weight: 500;
    }

        .job-meta-item:hover {
            background: rgba(106, 90, 205, 0.2);
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(106, 90, 205, 0.2);
        }

    .job-sections {
        display: grid;
        gap: 2rem;
        margin-top: 2rem;
    }

    .job-section {
        background: rgba(26, 31, 60, 0.5);
        border-radius: 20px;
        padding: 2rem;
        border: 1px solid var(--border-color);
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

        .job-section::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 4px;
            height: 100%;
            background: linear-gradient(180deg, var(--accent-color), var(--accent-light));
        }

        .job-section:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);
        }

    .job-section-title {
        color: var(--accent-color);
        margin-bottom: 1.5rem;
        display: flex;
        align-items: center;
        gap: 1rem;
        font-size: 1.4rem;
        font-weight: 600;
    }

    .job-section-content {
        line-height: 1.8;
        color: var(--text-secondary);
    }

    .job-sidebar {
        padding: 3rem 2rem;
        background: rgba(16, 16, 32, 0.7);
        display: flex;
        flex-direction: column;
        gap: 2rem;
    }

    .job-detail {
        display: flex;
        align-items: center;
        gap: 1.2rem;
        padding: 1rem;
        background: rgba(26, 31, 60, 0.3);
        border-radius: 15px;
        transition: all 0.3s ease;
    }

        .job-detail:hover {
            background: rgba(26, 31, 60, 0.5);
            transform: translateX(5px);
        }

    .job-detail-icon {
        background: rgba(106, 90, 205, 0.2);
        width: 56px;
        height: 56px;
        border-radius: 50%;
        display: flex;
        justify-content: center;
        align-items: center;
        color: var(--accent-color);
        font-size: 1.3rem;
        position: relative;
    }

        .job-detail-icon::after {
            content: '';
            position: absolute;
            inset: -2px;
            border-radius: 50%;
            border: 2px solid var(--accent-color);
            opacity: 0.5;
        }

    .job-detail-content {
        flex: 1;
    }

    .job-detail-label {
        color: var(--text-secondary);
        font-size: 0.9rem;
        margin-bottom: 0.3rem;
    }

    .job-detail-value {
        color: var(--text-primary);
        font-weight: 500;
        font-size: 1.1rem;
    }

    .deadline-warning {
        color: var(--warning-color);
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.9rem;
        margin-top: 0.5rem;
    }

    .job-actions {
        display: flex;
        flex-direction: column;
        gap: 1rem;
        margin-top: 2rem;
    }

    .btn-apply {
        background: linear-gradient(45deg, var(--accent-color), var(--accent-light));
        color: white;
        border: none;
        padding: 1.2rem 2rem;
        border-radius: 30px;
        text-transform: uppercase;
        letter-spacing: 1px;
        font-weight: 600;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.8rem;
        position: relative;
        overflow: hidden;
    }

        .btn-apply::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
            transition: 0.5s;
        }

        .btn-apply:hover::before {
            left: 100%;
        }

        .btn-apply:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 40px rgba(106, 90, 205, 0.4);
        }

    .btn-back {
        background: transparent;
        border: 2px solid var(--accent-color);
        color: var(--accent-color);
        padding: 1rem 2rem;
        border-radius: 30px;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.8rem;
        transition: all 0.3s ease;
        font-weight: 500;
    }

        .btn-back:hover {
            background: rgba(106, 90, 205, 0.1);
            transform: translateX(-5px);
        }

    .skills-list {
        display: flex;
        flex-wrap: wrap;
        gap: 0.8rem;
        margin-top: 1rem;
    }

    .skill-tag {
        background: rgba(106, 90, 205, 0.1);
        color: var(--accent-light);
        padding: 0.5rem 1rem;
        border-radius: 15px;
        font-size: 0.9rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.3s ease;
    }

        .skill-tag:hover {
            background: rgba(106, 90, 205, 0.2);
            transform: translateY(-2px);
        }
    /* Styles additionnels */
    .benefits-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1rem;
        margin-top: 1rem;
    }

    .benefit-item {
        background: rgba(106, 90, 205, 0.1);
        padding: 1rem;
        border-radius: 15px;
        display: flex;
        align-items: center;
        gap: 0.8rem;
        transition: all 0.3s ease;
    }

        .benefit-item:hover {
            background: rgba(106, 90, 205, 0.2);
            transform: translateY(-3px);
        }

        .benefit-item i {
            color: var(--accent-color);
            font-size: 1.2rem;
        }

    .sidebar-title {
        color: var(--text-primary);
        font-size: 1.2rem;
        margin-bottom: 1rem;
        padding-bottom: 0.5rem;
        border-bottom: 1px solid var(--border-color);
    }

    .quick-info-stats {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 1rem;
        margin-bottom: 1rem;
    }

    .stat-item {
        background: rgba(106, 90, 205, 0.1);
        padding: 0.8rem;
        border-radius: 12px;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        color: var(--text-secondary);
        font-size: 0.9rem;
    }

    .company-contact-card {
        background: rgba(26, 31, 60, 0.3);
        border-radius: 15px;
        padding: 1.5rem;
        margin-top: 1rem;
    }

    .contact-header {
        display: flex;
        align-items: center;
        gap: 0.8rem;
        margin-bottom: 1rem;
        color: var(--accent-color);
    }

    .contact-info {
        display: flex;
        flex-direction: column;
        gap: 0.8rem;
    }

    .contact-item {
        display: flex;
        align-items: center;
        gap: 0.8rem;
        color: var(--text-secondary);
    }

    .btn-save-job {
        background: transparent;
        border: 2px solid var(--accent-color);
        color: var(--accent-color);
        padding: 1rem 2rem;
        border-radius: 30px;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.8rem;
        transition: all 0.3s ease;
        font-weight: 500;
        width: 100%;
    }

        .btn-save-job:hover {
            background: rgba(106, 90, 205, 0.1);
        }

    .share-job {
        margin-top: 2rem;
    }

    .share-buttons {
        display: flex;
        gap: 0.8rem;
        margin-top: 1rem;
    }

    .share-btn {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        transition: all 0.3s ease;
    }

        .share-btn.linkedin {
            background: #0077b5;
        }

        .share-btn.twitter {
            background: #1da1f2;
        }

        .share-btn.facebook {
            background: #1877f2;
        }

        .share-btn.copy-link {
            background: var(--accent-color);
        }

        .share-btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }
   
</style>

<div class="page-wrapper">
    <div class="job-container">
        <div class="job-main-content">
            <div class="job-header">
                <div class="job-logo-wrapper">
                    @if (!string.IsNullOrEmpty(Model.EntrepriseLogo))
                    {
                        <img src="@Url.Content($"~/img/{Model.EntrepriseLogo}")"
                             alt="@Model.Entreprise Logo"
                             class="job-logo" />
                    }
                </div>
                <div>
                    <h1 class="job-title">@Model.Poste</h1>
                    <p class="job-company">
                        @Model.Entreprise
                        <span class="company-verified-badge">
                            <i class="fas fa-check-circle"></i>
                            Vérifié
                        </span>
                    </p>

                    <div class="job-meta">
                        <div class="job-meta-item">
                            <i class="fas fa-briefcase"></i>
                            <span>@Model.Type.ToString()</span>
                        </div>
                        <div class="job-meta-item">
                            <i class="fas fa-graduation-cap"></i>
                            <span>@Model.Profil.ToString()</span>
                        </div>
                        <div class="job-meta-item">
                            <i class="fas fa-industry"></i>
                            <span>@Model.Secteur</span>
                        </div>
                        <div class="job-meta-item">
                            <i class="fas fa-users"></i>
                            <span>@(new Random().Next(10, 100)) candidats</span>
                        </div>
                    </div>
                </div>
            </div>

            <div class="job-sections">
                <div class="job-section">
                    <h3 class="job-section-title">
                        <i class="fas fa-align-left"></i>
                        Description du poste
                    </h3>
                    <div class="job-section-content">@Model.Description</div>
                </div>

                <div class="job-section">
                    <h3 class="job-section-title">
                        <i class="fas fa-tasks"></i>
                        Responsabilités principales
                    </h3>
                    <div class="job-section-content">@Model.Responsibilites</div>
                </div>

                <div class="job-section">
                    <h3 class="job-section-title">
                        <i class="fas fa-check-circle"></i>
                        Qualifications requises
                    </h3>
                    <div class="job-section-content">
                        @Model.Qualifications
                        <div class="skills-list">
                            @foreach (var skill in new[] { "Communication", "Travail d'équipe", "Autonomie", "Créativité" })
                            {
                                <span class="skill-tag">
                                    <i class="fas fa-star"></i>
                                    @skill
                                </span>
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="job-section">
                <h3 class="job-section-title">
                    <i class="fas fa-plus-circle"></i>
                    Avantages
                </h3>
                <div class="job-section-content">
                    <div class="benefits-grid">
                        <div class="benefit-item">
                            <i class="fas fa-home"></i>
                            <span>Télétravail possible</span>
                        </div>
                        <div class="benefit-item">
                            <i class="fas fa-laptop"></i>
                            <span>Équipement fourni</span>
                        </div>
                        <div class="benefit-item">
                            <i class="fas fa-coffee"></i>
                            <span>Pause café incluse</span>
                        </div>
                        <div class="benefit-item">
                            <i class="fas fa-graduation-cap"></i>
                            <span>Formation continue</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="job-sidebar">
        <div class="job-quick-info">
            <h4 class="sidebar-title">Aperçu rapide</h4>
            <div class="quick-info-stats">
                <div class="stat-item">
                    <i class="fas fa-eye"></i>
                    <span>@(new Random().Next(100, 1000)) vues</span>
                </div>
                <div class="stat-item">
                    <i class="fas fa-clock"></i>
                    <span>Publié il y a @((DateTime.Now - Model.DatePub).Days) jours</span>
                </div>
            </div>
        </div>

        <div class="job-detail">
            <div class="job-detail-icon">
                <i class="fas fa-map-marker-alt"></i>
            </div>
            <div class="job-detail-content">
                <div class="job-detail-label">Localisation</div>
                <div class="job-detail-value">@Model.Location</div>
            </div>
        </div>

        <div class="job-detail">
            <div class="job-detail-icon">
                <i class="fas fa-money-bill-wave"></i>
            </div>
            <div class="job-detail-content">
                <div class="job-detail-label">Rémunération</div>
                <div class="job-detail-value">@Model.Remuneration.ToString("C2")/an</div>
            </div>
        </div>

        <div class="job-detail">
            <div class="job-detail-icon">
                <i class="far fa-calendar-alt"></i>
            </div>
            <div class="job-detail-content">
                <div class="job-detail-label">Date de publication</div>
                <div class="job-detail-value">@Model.DatePub.ToString("dd MMMM yyyy")</div>
            </div>
        </div>

        <div class="job-detail">
            <div class="job-detail-icon">
                <i class="fas fa-hourglass-end"></i>
            </div>
            <div class="job-detail-content">
                <div class="job-detail-label">Date limite</div>
                <div class="job-detail-value">@Model.DeadLine.ToString("dd MMMM yyyy")</div>
                @if ((Model.DeadLine - DateTime.Now).TotalDays < 7)
                {
                    <div class="deadline-warning">
                        <i class="fas fa-exclamation-circle"></i>
                        Expire bientôt
                    </div>
                }
            </div>
        </div>

        <div class="company-contact-card">
            <div class="contact-header">
                <i class="fas fa-building"></i>
                <h4>Contact Entreprise</h4>
            </div>
            <div class="contact-info">
                <div class="contact-item">
                    <i class="fas fa-envelope"></i>
                    <span>contact@entreprise.com</span>
                </div>
                <div class="contact-item">
                    <i class="fas fa-phone"></i>
                    <span>+33 1 23 45 67 89</span>
                </div>
            </div>
        </div>

        <div class="job-actions">
            @if (User.Identity.IsAuthenticated && !User.IsInRole("Recruteur"))
            {
                <form method="post" asp-controller="User" asp-action="Postuler" class="w-100">
                    <input type="hidden" name="offreId" value="@Model.Id" />
                    <button type="submit" class="btn-apply">
                        <i class="fas fa-paper-plane"></i>
                        Postuler maintenant
                    </button>
                </form>
                <button class="btn-save-job">
                    <i class="far fa-bookmark"></i>
                    Sauvegarder l'offre
                </button>
            }
            <a href="javascript:history.back()" class="btn-back">
                <i class="fas fa-arrow-left"></i>
                Retour
            </a>
        </div>

        <div class="share-job">
            <h4 class="sidebar-title">Partager l'offre</h4>
            <div class="share-buttons">
                <a href="#" class="share-btn linkedin">
                    <i class="fab fa-linkedin"></i>
                </a>
                <a href="#" class="share-btn twitter">
                    <i class="fab fa-twitter"></i>
                </a>
                <a href="#" class="share-btn facebook">
                    <i class="fab fa-facebook"></i>
                </a>
                <button class="share-btn copy-link">
                    <i class="fas fa-link"></i>
                </button>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const sections = document.querySelectorAll('.job-section');
            sections.forEach((section, index) => {
                section.style.opacity = '0';
                section.style.transform = 'translateY(20px)';
                setTimeout(() => {
                    section.style.transition = 'all 0.5s ease';
                    section.style.opacity = '1';
                    section.style.transform = 'translateY(0)';
                }, 100 * index);
            });

            const copyBtn = document.querySelector('.copy-link');
            if (copyBtn) {
                copyBtn.addEventListener('click', () => {
                    navigator.clipboard.writeText(window.location.href)
                        .then(() => {
                            copyBtn.innerHTML = '<i class="fas fa-check"></i>';
                            setTimeout(() => {
                                copyBtn.innerHTML = '<i class="fas fa-link"></i>';
                            }, 2000);
                        });
                });
            }

            const saveBtn = document.querySelector('.btn-save-job');
            if (saveBtn) {
                saveBtn.addEventListener('click', function() {
                    this.innerHTML = '<i class="fas fa-check"></i> Offre sauvegardée';
                    this.style.backgroundColor = 'var(--success-color)';
                    this.style.color = 'white';
                    this.style.border = 'none';
                });
            }
        });
    </script>
}