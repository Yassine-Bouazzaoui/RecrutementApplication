@model IEnumerable<RecrutementApplication.Models.Offre>

@{
    ViewData["Title"] = "Mes Offres";
}

<div class="dashboard-container">
    <div class="page-header">
        <h1 class="title-animate">
            <i class="fas fa-briefcase"></i>
            <span>Mes Offres</span>
        </h1>
        <a href="@Url.Action("CreateOffre", "User")" class="btn btn-primary create-btn">
            <i class="fas fa-plus-circle"></i> Nouvelle offre
        </a>
    </div>

    @if (!Model.Any())
    {
        <div class="empty-state">
            <i class="fas fa-folder-open fa-3x mb-3"></i>
            <p>Vous n'avez pas encore publié d'offres</p>
            <small>Commencez par créer votre première offre d'emploi</small>
        </div>
    }
    else
    {
        <div class="offers-grid">
            @foreach (var offre in Model)
            {
                <div class="offer-card">
                    <div class="offer-content">
                        <div class="offer-header">
                            @if (!string.IsNullOrEmpty(offre.EntrepriseLogo))
                            {
                                <div class="logo-container">
                                    <img src="@Url.Content($"~/img/{offre.EntrepriseLogo}")" alt="Logo" />
                                </div>
                            }
                            <h3 class="offer-title">@offre.Poste</h3>
                        </div>

                        <div class="tags-container">
                            <span class="tag tag-primary">
                                <i class="fas fa-building"></i> @offre.Type
                            </span>
                            <span class="tag tag-secondary">
                                <i class="fas fa-user-tie"></i> @offre.Profil
                            </span>
                            <span class="tag tag-info">
                                <i class="fas fa-industry"></i> @offre.Secteur
                            </span>
                        </div>

                        <div class="offer-details">
                            <div class="detail-item">
                                <i class="fas fa-map-marker-alt"></i>
                                <span>@offre.Location</span>
                            </div>
                            <div class="detail-item">
                                <i class="fas fa-money-bill-wave"></i>
                                <span>@offre.Remuneration</span>
                            </div>
                            <div class="detail-item">
                                <i class="far fa-calendar-alt"></i>
                                <span>Publié le : @offre.DatePub.ToShortDateString()</span>
                            </div>
                            <div class="detail-item">
                                <i class="fas fa-hourglass-end"></i>
                                <span>Date limite : @offre.DeadLine.ToShortDateString()</span>
                            </div>
                        </div>

                        <div class="offer-description">
                            @offre.Description
                        </div>
                    </div>

                    <div class="offer-actions">
                        <a href="@Url.Action("DetailsOffre", "User", new { id = offre.Id })" class="btn btn-icon">
                            <i class="fas fa-eye"></i>
                            <span>Détails</span>
                        </a>
                        <a href="@Url.Action("EditOffre", "User", new { id = offre.Id })" class="btn btn-icon">
                            <i class="fas fa-edit"></i>
                            <span>Modifier</span>
                        </a>
                        <a href="@Url.Action("DeleteOffre", "User", new { id = offre.Id })" class="btn btn-icon btn-danger">
                            <i class="fas fa-trash"></i>
                            <span>Supprimer</span>
                        </a>
                        <a href="@Url.Action("VoirCandidats", "User", new { offreId = offre.Id })" class="btn btn-icon btn-info">
                            <i class="fas fa-users"></i>
                            <span>Candidats</span>
                        </a>
                    </div>
                </div>
            }
        </div>

        <div class="stats-footer">
            <div class="stat-item">
                <i class="fas fa-chart-bar"></i>
                <span>Total des offres : @Model.Count()</span>
            </div>
        </div>
    }
</div>

<style>
    :root {
        --primary-color: #4f46e5;
        --primary-hover: #4338ca;
        --secondary-color: #64748b;
        --danger-color: #ef4444;
        --info-color: #0ea5e9;
        --success-color: #22c55e;
        --background: #0f172a;
        --card-bg: #1e293b;
        --text-primary: #f8fafc;
        --text-secondary: #94a3b8;
        --border-color: #334155;
    }

    body {
        background-color: var(--background);
        color: var(--text-primary);
    }

    .dashboard-container {
        padding: 2rem;
        max-width: 1400px;
        margin: 0 auto;
    }

    /* Header */
    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
        padding: 1rem 0;
    }

    .title-animate {
        display: flex;
        align-items: center;
        gap: 1rem;
        font-size: 2rem;
        color: var(--text-primary);
        opacity: 0;
        transform: translateY(20px);
        animation: fadeInUp 0.6s ease forwards;
    }

    .create-btn {
        background: var(--primary-color);
        color: white;
        border: none;
        padding: 0.75rem 1.5rem;
        border-radius: 0.5rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.3s ease;
    }

        .create-btn:hover {
            background: var(--primary-hover);
            transform: translateY(-2px);
        }

    /* Empty State */
    .empty-state {
        text-align: center;
        padding: 4rem;
        background: var(--card-bg);
        border-radius: 1rem;
        color: var(--text-secondary);
    }

    /* Offers Grid */
    .offers-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
        gap: 1.5rem;
        margin-bottom: 2rem;
    }

    /* Offer Card */
    .offer-card {
        background: var(--card-bg);
        border-radius: 1rem;
        overflow: hidden;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        opacity: 0;
        animation: fadeIn 0.6s ease forwards;
    }

        .offer-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
        }

    .offer-content {
        padding: 1.5rem;
    }

    .offer-header {
        display: flex;
        align-items: center;
        gap: 1rem;
        margin-bottom: 1rem;
    }

    .logo-container {
        width: 60px;
        height: 60px;
        border-radius: 0.5rem;
        overflow: hidden;
        background: white;
        padding: 0.5rem;
    }

        .logo-container img {
            width: 100%;
            height: 100%;
            object-fit: contain;
        }

    .offer-title {
        font-size: 1.25rem;
        color: var(--text-primary);
        margin: 0;
    }

    /* Tags */
    .tags-container {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
        margin-bottom: 1rem;
    }

    .tag {
        display: inline-flex;
        align-items: center;
        gap: 0.25rem;
        padding: 0.25rem 0.75rem;
        border-radius: 1rem;
        font-size: 0.875rem;
        transition: transform 0.2s ease;
    }

        .tag:hover {
            transform: scale(1.05);
        }

    .tag-primary {
        background: var(--primary-color);
        color: white;
    }

    .tag-secondary {
        background: var(--secondary-color);
        color: white;
    }

    .tag-info {
        background: var(--info-color);
        color: white;
    }

    /* Details */
    .offer-details {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 0.75rem;
        margin-bottom: 1rem;
    }

    .detail-item {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        color: var(--text-secondary);
        font-size: 0.875rem;
    }

    /* Description */
    .offer-description {
        color: var(--text-secondary);
        font-size: 0.875rem;
        line-height: 1.5;
        max-height: 4.5em;
        overflow: hidden;
        display: -webkit-box;
        -webkit-line-clamp: 3;
        -webkit-box-orient: vertical;
    }

    /* Actions */
    .offer-actions {
        display: flex;
        gap: 0.5rem;
        padding: 1rem;
        background: rgba(0, 0, 0, 0.1);
    }

    .btn-icon {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.5rem 1rem;
        border-radius: 0.5rem;
        font-size: 0.875rem;
        transition: all 0.3s ease;
        border: 1px solid var(--border-color);
        color: var(--text-primary);
        background: transparent;
    }

        .btn-icon:hover {
            transform: translateY(-2px);
            color: white;
        }

    .btn-danger:hover {
        background: var(--danger-color);
        border-color: var(--danger-color);
    }

    .btn-info:hover {
        background: var(--info-color);
        border-color: var(--info-color);
    }

    /* Stats Footer */
    .stats-footer {
        margin-top: 2rem;
        padding: 1rem;
        background: var(--card-bg);
        border-radius: 0.5rem;
        display: flex;
        justify-content: center;
    }

    .stat-item {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        color: var(--text-secondary);
    }

   
</style>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/js/all.min.js"></script>
    <script>
        // Animation des cartes au scroll
        document.addEventListener('DOMContentLoaded', function() {
            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.style.opacity = '1';
                        entry.target.style.transform = 'translateY(0)';
                    }
                });
            }, {
                threshold: 0.1
            });

            document.querySelectorAll('.offer-card').forEach(card => {
                observer.observe(card);
            });
        });

        document.querySelectorAll('a[href*="Delete"]').forEach(link => {
            link.addEventListener('click', function(e) {
                if (!confirm('Êtes-vous sûr de vouloir supprimer cette offre ?')) {
                    e.preventDefault();
                }
            });
        });
    </script>
}