@model IEnumerable<RecrutementApplication.Models.Candidature>

@if (!string.IsNullOrEmpty(ViewBag.SuccessMessage))
{
    <div class="alert alert-success animate__animated animate__fadeInDown animate__faster" role="alert">
        <i class="fas fa-check-circle me-2 animate__animated animate__rubberBand"></i>
        @ViewBag.SuccessMessage
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger animate__animated animate__shakeX animate__faster" role="alert">
        <i class="fas fa-exclamation-triangle me-2 animate__animated animate__swing"></i>
        @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="dashboard-container animate__animated animate__fadeIn">
    <div class="dashboard-card">
        <div class="dashboard-header">
            <div class="header-content">
                <div class="title-section">
                    <i class="fas fa-briefcase-clock title-icon"></i>
                    <h1 class="dashboard-title">Tableau de bord des candidatures</h1>
                </div>
                <div class="header-actions">
                    <div class="stats-badge">
                        <i class="fas fa-chart-line me-2"></i>
                        <span>Total: @Model.Count()</span>
                    </div>
                </div>
            </div>
        </div>

        <div class="dashboard-body">
            <div class="table-container">
                <table class="modern-table">
                    <thead>
                        <tr>
                            <th><i class="fas fa-building"></i> Entreprise</th>
                            <th><i class="fas fa-briefcase"></i> Poste</th>
                            <th><i class="fas fa-calendar"></i> Date</th>
                            <th><i class="fas fa-cogs"></i> Actions</th>
                            <th><i class="fas fa-flag"></i> Statut</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var candidature in Model)
                        {
                            <tr class="table-row animate__animated animate__fadeInUp"
                                style="animation-delay: @(Model.ToList().IndexOf(candidature) * 0.1)s">
                                <td>
                                    <div class="company-info">
                                        <div class="company-logo-wrapper">
                                            <img src="@Url.Content($"~/img/{@candidature.Offre.EntrepriseLogo}")"
                                                 alt="@candidature.Offre.Entreprise"
                                                 class="company-logo" />
                                        </div>
                                        <span class="company-name">@candidature.Offre.Entreprise</span>
                                    </div>
                                </td>
                                <td>
                                    <div class="position-badge">
                                        <i class="fas fa-code"></i>
                                        <span>@candidature.Offre.Poste</span>
                                    </div>
                                </td>
                                <td>
                                    <div class="date-badge">
                                        <i class="far fa-calendar-alt"></i>
                                        <span>@(candidature.DatePostulation?.ToString("dd MMM yyyy") ?? "Non définie")</span>
                                    </div>
                                </td>
                                <td>
                                    <div class="actions-group">
                                        <a href="@Url.Action("Details", "Offres", new { id = candidature.Offre.Id })"
                                           class="action-btn details-btn">
                                            <i class="fas fa-eye"></i>
                                            <span>Détails</span>
                                        </a>
                                    </div>
                                </td>
                                <td>
                                    @{
                                        var statusClass = candidature.Status switch
                                        {
                                            StatusCandidature.Validee => "status-success",
                                            StatusCandidature.Refusee => "status-danger",
                                            _ => "status-pending"
                                        };

                                        var statusIcon = candidature.Status switch
                                        {
                                            StatusCandidature.Validee => "fas fa-check-circle",
                                            StatusCandidature.Refusee => "fas fa-times-circle",
                                            _ => "fas fa-clock"
                                        };
                                    }
                                    <div class="status-badge @statusClass">
                                        <i class="@statusIcon"></i>
                                        <span>@candidature.Status.ToString()</span>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<style>
    :root {
        --primary-blue: #4e73df;
        --hover-blue: #2e59d9;
        --success-green: #1cc88a;
        --danger-red: #e74a3b;
        --warning-yellow: #f6c23e;
        --text-color: #ffffff;
        --text-muted: #858796;
        --border-color: rgba(255, 255, 255, 0.15);
    }

    .dashboard-container {
        padding: 1.5rem;
        color: var(--text-color);
    }

    .dashboard-card {
        border-radius: 0.5rem;
        border: 1px solid var(--border-color);
    }

    .dashboard-header {
        padding: 1.5rem;
        background: var(--primary-blue);
        border-radius: 0.5rem 0.5rem 0 0;
    }

    .header-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .title-section {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .title-icon {
        font-size: 1.5rem;
        animation: pulse 2s infinite;
    }

    .dashboard-title {
        font-size: 1.5rem;
        margin: 0;
    }

    .stats-badge {
        background: rgba(255, 255, 255, 0.1);
        padding: 0.5rem 1rem;
        border-radius: 2rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .modern-table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0 0.5rem;
    }

        .modern-table th {
            color: var(--text-muted);
            padding: 1rem;
            font-weight: 500;
        }

    .company-info {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .company-logo-wrapper {
        width: 40px;
        height: 40px;
        border-radius: 0.5rem;
        overflow: hidden;
        transition: transform 0.3s ease;
    }

        .company-logo-wrapper:hover {
            transform: scale(1.1);
        }

    .company-logo {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .position-badge, .date-badge {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.5rem 1rem;
        border-radius: 2rem;
        background: rgba(78, 115, 223, 0.1);
        font-size: 0.875rem;
    }

    .action-btn {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.5rem 1rem;
        border-radius: 2rem;
        background: var(--primary-blue);
        color: white;
        text-decoration: none;
        transition: all 0.3s ease;
    }

        .action-btn:hover {
            background: var(--hover-blue);
            transform: translateY(-2px);
        }

    .status-badge {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.5rem 1rem;
        border-radius: 2rem;
        font-size: 0.875rem;
    }

    .status-success {
        background: var(--success-green);
        color: white;
    }

    .status-danger {
        background: var(--danger-red);
        color: white;
    }

    .status-pending {
        background: var(--warning-yellow);
        color: #666;
    }

    .table-row td {
        padding: 1rem;
        background: rgba(255, 255, 255, 0.05);
        transition: all 0.3s ease;
    }

    .table-row:hover td {
        background: rgba(255, 255, 255, 0.1);
        transform: translateY(-2px);
    }

    .animate__animated {
        animation-duration: 0.5s;
    }

    
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const tableRows = document.querySelectorAll('.table-row');
        tableRows.forEach((row, index) => {
            row.style.opacity = '0';
            row.style.transform = 'translateY(20px)';
            setTimeout(() => {
                row.style.opacity = '1';
                row.style.transform = 'translateY(0)';
            }, index * 100);
        });

        const actionButtons = document.querySelectorAll('.action-btn');
        actionButtons.forEach(btn => {
            btn.addEventListener('mouseenter', () => {
                btn.style.transform = 'translateY(-2px)';
            });
            btn.addEventListener('mouseleave', () => {
                btn.style.transform = 'translateY(0)';
            });
        });
    });
</script>